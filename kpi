import React, { useState } from "react";
import { Pie } from "react-chartjs-2";
import { Chart as ChartJS, ArcElement, Tooltip, Legend } from "chart.js";
import {
  Dialog,
  DialogTrigger,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
  DialogFooter,
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardHeader,
  CardTitle,
  CardDescription,
  CardContent,
  CardFooter,
} from "@/components/ui/card";

// Register Chart.js components
ChartJS.register(ArcElement, Tooltip, Legend);

// Define TypeScript Interface for KPI data
interface KPIItem {
  title: string;
  value: string;
}

export const KpiCard = () => {
  // KPI Data with Type
  const kpiData: KPIItem[] = [
    { title: "Revenue", value: "$500K" },
    { title: "Users", value: "12,000" },
    { title: "Orders", value: "1,500" },
    { title: "Conversion Rate", value: "5.2%" },
  ];

  // State for Modal
  const [selectedKPI, setSelectedKPI] = useState<KPIItem | null>(null);

  // Chart Data
  const getChartData = (title: string) => {
    return {
      labels: ["Category A", "Category B", "Category C"],
      datasets: [
        {
          data: [Math.random() * 100, Math.random() * 100, Math.random() * 100],
          backgroundColor: ["#FF6384", "#36A2EB", "#FFCE56"],
        },
      ],
    };
  };

  return (
    <div className="flex justify-center flex-wrap p-5 gap-5">
      {kpiData.map((kpi, index) => (
        <Dialog key={index}>
          <DialogTrigger asChild>
            <Card
              className="p-3 col-lg-2 col-md-3 col-sm-4 col-6 bg-[#F3eddf] rounded-xl border border-gray-300 shadow-sm text-center w-52 cursor-pointer transition-transform transform hover:scale-105 hover:shadow-md flex flex-col justify-between overflow-hidden"
              onClick={() => setSelectedKPI(kpi)}
            >
              <CardHeader>
                {/* Title as <p> with black color and increased width */}
                <p className="text-black text-lg font-semibold">{kpi.title}</p>
                {/* Description as <h3> with black color */}
                <h3 className="text-black text-xl font-bold">{kpi.value}</h3>
              </CardHeader>
            </Card>
          </DialogTrigger>
          {selectedKPI && (
            <DialogContent className="sm:max-w-[425px]">
              <DialogHeader>
                <DialogTitle>{selectedKPI.title} Data</DialogTitle>
                <DialogDescription>
                  Below is the data visualization for {selectedKPI.title}.
                </DialogDescription>
              </DialogHeader>
              <CardContent>
                <Pie data={getChartData(selectedKPI.title)} />
              </CardContent>
              <DialogFooter>
                <Button onClick={() => setSelectedKPI(null)}>Close</Button>
              </DialogFooter>
            </DialogContent>
          )}
        </Dialog>
      ))}
    </div>
  );
};
