"use client";

import { useState } from "react";
import { BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from "recharts";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { ChartConfig, ChartContainer, ChartTooltipContent } from "@/components/ui/chart";

const stationEvents = [
  { category: "iPhone", associated: 4, disassociated: 4 },
  { category: "Watch", associated: 3, disassociated: 3 }
];

const chartConfig: ChartConfig = {
  default: {
    label: "Count",
    color: "hsl(var(--chart-1))"
  }
}; // Fixed type definition

export const StationEventsChart: React.FC = () => { // Added explicit type for component
  const [activeIndex, setActiveIndex] = useState<number | null>(null);

  return (
    <Card>
      <CardHeader>
        <CardTitle>Station Events By Category</CardTitle>
        <CardDescription>Event counts for devices in 2024</CardDescription>
      </CardHeader>
      <CardContent>
        <ChartContainer config={chartConfig}>
          <ResponsiveContainer width="100%" height={300}> 
            <BarChart
              data={stationEvents}
              layout="vertical"
              barSize={30}
              barCategoryGap={10}
              onMouseMove={(state) => setActiveIndex(state?.activeTooltipIndex ?? null)}
              onMouseLeave={() => setActiveIndex(null)}>
              <CartesianGrid horizontal={false} />
              <XAxis type="number" label={{ value: 'Count of Station Events', position: 'insideBottom', offset: -5 }} />
              <YAxis dataKey="category" type="category" tickLine={false} axisLine={false} angle={-90} textAnchor="end" />
              <Tooltip content={<ChartTooltipContent hideLabel />} />
              <Legend />
              <Bar dataKey="associated" fill="#6a0dad" name="Client associated" />
              <Bar dataKey="disassociated" fill="#ff6347" name="Client disassociated" />
            </BarChart>
          </ResponsiveContainer>
        </ChartContainer>
      </CardContent>
      <CardFooter className="flex-col items-start gap-2 text-sm">
        Showing event counts with vertical stacked bars for each category.
      </CardFooter>
    </Card>
  );
};
