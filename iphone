"use client";

import { useState } from "react";
import { BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from "recharts";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { ChartConfig, ChartContainer, ChartTooltipContent } from "@/components/ui/chart";

const stationEvents = [
  { category: "iPhone", associated: 4, disassociated: 4 },
  { category: "Watch", associated: 3, disassociated: 3 }
];

const chartConfig = {
  default: {
    label: "Count",
    color: "hsl(var(--chart-1))"
  }
} satisfies ChartConfig;

export const BarChartComponent = () => {
  const [activeIndex, setActiveIndex] = useState<number | null>(null);

  return (
    <Card>
      <CardHeader>
        <CardTitle>Station Events By Category</CardTitle>
        <CardDescription>Event counts for devices in 2024</CardDescription>
      </CardHeader>
      <CardContent>
        <ChartContainer config={chartConfig}>
          <ResponsiveContainer width="100%" height={300}>
            <BarChart
              data={stationEvents}
              layout="vertical"
              barSize={30}
              barCategoryGap={10}
              onMouseMove={(state) => setActiveIndex(state?.activeTooltipIndex ?? null)}
              onMouseLeave={() => setActiveIndex(null)}>
              <CartesianGrid horizontal={false} />
              <XAxis type="number" label={{ value: 'Count of Station Events', position: 'insideBottom', offset: -5 }} /> {/* Added label to XAxis */}
              <YAxis dataKey="category" type="category" tickLine={false} axisLine={false} />
              <Tooltip content={<ChartTooltipContent hideLabel />} />
              <Legend />
              <Bar dataKey="associated" fill="#6a0dad" name="Client associated" />
              <Bar dataKey="disassociated" fill="#ff6347" name="Client disassociated" />
            </BarChart>
          </ResponsiveContainer>
        </ChartContainer>
      </CardContent>
      <CardFooter className="flex-col items-start gap-2 text-sm">
        Showing event counts with vertical stacked bars for each category.
      </CardFooter>
    </Card>
  );
};a

The component failed to render properly, likely due to a configuration issue in Storybook. Here are some common causes and how you can address them:

Missing Context/Providers: You can use decorators to supply specific contexts or providers, which are sometimes necessary for components to render correctly. For detailed instructions on using decorators, please visit the Decorators documentation.
Misconfigured Webpack or Vite: Verify that Storybook picks up all necessary settings for loaders, plugins, and other relevant parameters. You can find step-by-step guides for configuring Webpack or Vite with Storybook.
Missing Environment Variables: Your Storybook may require specific environment variables to function as intended. You can set up custom environment variables as outlined in the Environment Variables documentation.
ReferenceError: a is not defined
    at ./src/components/charts/barchart.tsx (http://localhost:6006/stories-chart-component-barchart-stories.8d6675d57af80bd4a924.hot-update.js:327:1)
    at options.factory (http://localhost:6006/runtime~main.iframe.bundle.js:654:31)
    at __webpack_require__ (http://localhost:6006/runtime~main.iframe.bundle.js:28:33)
    at fn (http://localhost:6006/runtime~main.iframe.bundle.js:313:21)
    at ./src/stories/chart-component/barchart.stories.tsx (http://localhost:6006/stories-chart-component-barchart-stories.iframe.bundle.js:17:85)
    at options.factory (http://localhost:6006/runtime~main.iframe.bundle.js:654:31)
    at __webpack_require__ (http://localhost:6006/runtime~main.iframe.bundle.js:28:33)
    at fn (http://localhost:6006/runtime~main.iframe.bundle.js:313:21)
    at http://localhost:6006/main.iframe.bundle.js:4645:10
    at async mn.importFn (http://localhost:6006/main.iframe.bundle.js:230:27)
