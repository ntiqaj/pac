"use client"

import type { Meta, StoryObj } from "@storybook/react";
import { TrendingUp } from "lucide-react";
import { Area, AreaChart, CartesianGrid, XAxis } from "recharts";

import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import {
  ChartConfig,
  ChartContainer,
  ChartTooltip,
  ChartTooltipContent,
} from "@/components/ui/chart";

const chartData = [
  { month: "January", desktop: 186, mobile: 80 },
  { month: "February", desktop: 305, mobile: 200 },
  { month: "March", desktop: 237, mobile: 120 },
  { month: "April", desktop: 73, mobile: 190 },
  { month: "May", desktop: 209, mobile: 130 },
  { month: "June", desktop: 214, mobile: 140 },
];

const chartConfig = {
  desktop: { label: "Desktop", color: "hsl(var(--chart-1))" },
  mobile: { label: "Mobile", color: "hsl(var(--chart-2))" },
} satisfies ChartConfig;

const AreaChartComponent = ({ dataKey1 = "mobile", dataKey2 = "desktop" }) => (
  <Card>
    <CardHeader>
      <CardTitle>Area Chart - Stacked</CardTitle>
      <CardDescription>Showing total visitors for the last 6 months</CardDescription>
    </CardHeader>
    <CardContent>
      <ChartContainer config={chartConfig}>
        <AreaChart data={chartData} margin={{ left: 12, right: 12 }}>
          <CartesianGrid vertical={false} />
          <XAxis dataKey="month" tickLine={false} axisLine={false} tickMargin={8} tickFormatter={(value) => value.slice(0, 3)} />
          <ChartTooltip cursor={false} content={<ChartTooltipContent indicator="dot" />} />
          <Area dataKey={dataKey1} type="natural" fill="var(--color-mobile)" fillOpacity={0.4} stroke="var(--color-mobile)" stackId="a" />
          <Area dataKey={dataKey2} type="natural" fill="var(--color-desktop)" fillOpacity={0.4} stroke="var(--color-desktop)" stackId="a" />
        </AreaChart>
      </ChartContainer>
    </CardContent>
    <CardFooter>
      <div className="flex w-full items-start gap-2 text-sm">
        <div className="grid gap-2">
          <div className="flex items-center gap-2 font-medium leading-none">
            Trending up by 5.2% this month <TrendingUp className="h-4 w-4" />
          </div>
          <div className="flex items-center gap-2 leading-none text-muted-foreground">January - June 2024</div>
        </div>
      </div>
    </CardFooter>
  </Card>
);

const meta: Meta<typeof AreaChartComponent> = {
  title: "UI/AreaChart",
  component: AreaChartComponent,
  tags: ["autodocs"],
};

export default meta;
type Story = StoryObj<typeof AreaChartComponent>;

export const Default: Story = {
  render: () => <AreaChartComponent dataKey1="mobile" dataKey2="desktop" />,
};

"use client"

import type { Meta, StoryObj } from "@storybook/react"
import { TrendingUp } from "lucide-react"
import { Area, AreaChart, CartesianGrid, XAxis } from "recharts"
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card"
import {
  ChartConfig,
  ChartContainer,
  ChartTooltip,
  ChartTooltipContent,
} from "@/components/ui/chart"

// Example chart data
const chartData = [
  { month: "January", desktop: 186, mobile: 80 },
  { month: "February", desktop: 305, mobile: 200 },
  { month: "March", desktop: 237, mobile: 120 },
  { month: "April", desktop: 73, mobile: 190 },
  { month: "May", desktop: 209, mobile: 130 },
  { month: "June", desktop: 214, mobile: 140 },
]

// Chart configuration
const chartConfig = {
  desktop: { label: "Desktop", color: "hsl(var(--chart-1))" },
  mobile: { label: "Mobile", color: "hsl(var(--chart-2))" },
} satisfies ChartConfig

// Props for the AreaChartComponent
interface AreaChartComponentProps {
  dataKey1?: string // Key for the first data series (e.g., "mobile")
  dataKey2?: string // Key for the second data series (e.g., "desktop")
  title?: string // Title of the chart
  description?: string // Description of the chart
  data?: { [key: string]: string | number }[] // Dynamic data array
}

const AreaChartComponent = ({
  dataKey1 = "mobile", // Default key for first series
  dataKey2 = "desktop", // Default key for second series
  title = "Area Chart - Stacked",
  description = "Showing total visitors for the last 6 months",
  data = chartData,
}: AreaChartComponentProps) => {
  // Automatically infer keys if not provided
  const keys = data.length > 0 ? Object.keys(data[0]) : []
  
  // If no custom data keys are provided, infer them
  const inferredDataKey1 = keys.find(key => key !== "month") || dataKey1
  const inferredDataKey2 = keys.filter(key => key !== "month")[1] || dataKey2

  return (
    <Card>
      <CardHeader>
        <CardTitle>{title}</CardTitle>
        <CardDescription>{description}</CardDescription>
      </CardHeader>
      <CardContent>
        <ChartContainer config={chartConfig}>
          <AreaChart data={data} margin={{ left: 12, right: 12 }}>
            <CartesianGrid vertical={false} />
            <XAxis
              dataKey="month"
              tickLine={false}
              axisLine={false}
              tickMargin={8}
              tickFormatter={(value) => value.slice(0, 3)}
            />
            <ChartTooltip cursor={false} content={<ChartTooltipContent indicator="dot" />} />
            <Area
              dataKey={inferredDataKey1}
              type="natural"
              fill="#93C5FD" // Mild blue color
              fillOpacity={0.4}
              stroke="#93C5FD" // Mild blue color
              stackId="a"
            />
            <Area
              dataKey={inferredDataKey2}
              type="natural"
              fill="#6EE7B7" // Mild green color
              fillOpacity={0.4}
              stroke="#6EE7B7" // Mild green color
              stackId="a"
            />
          </AreaChart>
        </ChartContainer>
      </CardContent>
      <CardFooter>
        <div className="flex w-full items-start gap-2 text-sm">
          <div className="grid gap-2">
            <div className="flex items-center gap-2 font-medium leading-none">
              Trending up by 5.2% this month <TrendingUp className="h-4 w-4" />
            </div>
            <div className="flex items-center gap-2 leading-none text-muted-foreground">
              January - June 2024
            </div>
          </div>
        </div>
      </CardFooter>
    </Card>
  )
}

const meta: Meta<typeof AreaChartComponent> = {
  title: "UI/AreaChart",
  component: AreaChartComponent,
  tags: ["autodocs"],
}

export default meta
type Story = StoryObj<typeof AreaChartComponent>

export const Default: Story = {
  render: () => <AreaChartComponent />,
}

